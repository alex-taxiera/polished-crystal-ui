{"version":3,"sources":["components/sections/sections.module.scss","components/link/link.module.scss","components/link/link.js","components/sections/section.js","pages/home.js","components/sprites/sprites.js","services/config.js","services/pc-api.js","pages/pokemon.js","components/api-version-select.js","app.js","reportWebVitals.js","index.js"],"names":["module","exports","BasicLink","children","props","className","styles","basic","Link","AnchorToTab","target","Section","title","withBox","contentClass","mainClass","cx","undefined","section","SectionContainer","vertical","container","Home","href","src","spriteWeight","plain","kanto","johto","sortSprites","a","name","b","toLowerCase","Infinity","Sprites","sprites","sort","map","i","spriteName","urls","normal","shiny","ConfigContext","createContext","VersionContext","usePolishedCrystalService","config","version","configContext","useContext","versionContext","baseUrl","pcApiUrl","currentVersion","current","useMemo","PolishedCrystalService","this","fetch","then","res","json","pokemon","options","validSprites","fetchSpriteList","filter","sprite","startsWith","relevantSprites","scale","Pokemon","useParams","Helmet","replace","k","toUpperCase","PokemonList","PokemonStats","to","pickStat","data","key","faithful","unfaithful","formatStat","types","abilities","evolutions","heldItems","gender","baseExp","catchRate","eggGroups","hatchCycles","growthRate","baseStats","evYield","movesByLevel","concat","level","movesByTMHM","StatBlock","stats","id","list","Object","entries","reduce","total","label","value","pcService","useState","isLoading","setIsLoading","stat","setStat","setData","normalSprites","setNormalSprits","shinySprites","setShinySprits","setFaithful","useEffect","Promise","all","fetchStat","getSpriteRoute","batchUpdate","length","parts","split","push","htmlFor","type","disabled","checked","onChange","event","one","two","hidden","item","evo","requirement","group","genderless","male","female","move","setList","history","useHistory","fetchStatList","l","p","VersionSelect","set","App","setConfig","versions","setVersions","setCurrentVersion","versionData","v","configPath","process","NODE_ENV","loadConfig","fetchVersions","defaultTitle","titleTemplate","Provider","exact","path","onPerfEntry","ReactDOM","render","StrictMode","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.47dd672e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sections_container__1gFpN\",\"vertical\":\"sections_vertical__xGQim\",\"section\":\"sections_section__2Vw4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basic\":\"link_basic__3g1WC\"};","import React from 'react'\nimport {\n  Link as RouterLink,\n} from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport styles from './link.module.scss'\n\nexport function BasicLink ({ children, ...props }) {\n  return (\n    <RouterLink className={styles.basic} {...props}>\n      {children}\n    </RouterLink>\n  )\n}\n\nexport function Link ({ children, ...props }) {\n  return (\n    <RouterLink className=\"p-1 mx-2\" {...props}>\n      {children}\n    </RouterLink>\n  )\n}\n\nexport function AnchorToTab ({ children, ...props }) {\n  return (\n    <a target=\"_blank\" {...props}>\n      {children}\n    </a>\n  )\n}\n\nBasicLink.propTypes = Link.propTypes = AnchorToTab.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\nimport styles from './sections.module.scss'\n\nexport function Section ({\n  title,\n  children,\n  withBox,\n  contentClass,\n}) {\n  const mainClass = cx(\n    contentClass,\n    withBox ? 'd-flex justify-content-center' : undefined,\n  )\n\n  return (\n    <section className={styles.section}>\n      { title ? (\n        <header>\n          <h6>\n            {title}\n          </h6>\n        </header>\n      ) : undefined}\n      <main className={mainClass}>\n        {\n          withBox\n            ? (\n              <div className={`text-${withBox}`}>\n                {children}\n              </div>\n            ) : children\n        }\n      </main>\n    </section>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n  title: PropTypes.string,\n  withBox: PropTypes.string,\n  contentClass: PropTypes.string,\n}\n\nexport function SectionContainer ({ children, vertical = false }) {\n  return (\n    <div\n      className={cx(styles.container, vertical ? styles.vertical : undefined)}\n    >\n      {children}\n    </div>\n  )\n}\n\nSectionContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n  vertical: PropTypes.bool,\n}\n","import React from 'react'\nimport { AnchorToTab } from '../components/link/link'\n\nimport {\n  Section,\n} from '../components/sections/section'\n\nexport function Home () {\n  return (\n    <Section contentClass=\"p-5\">\n      <p className=\"lead\">\n        This site is a rough data center made for (but not affiliated with) <AnchorToTab href=\"https://github.com/Rangi42/polishedcrystal#pok%C3%A9mon-polished-crystal\">\n          Polished Crystal.\n          <br />\n          <img src=\"/images/title-screen.png\" />\n        </AnchorToTab>\n      </p>\n    </Section>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  Section,\n} from '../sections/section'\n\nconst spriteWeight = {\n  plain: 0,\n  kanto: 1,\n  johto: 2,\n}\n\nfunction sortSprites ({ name: a }, { name: b }) {\n  return (spriteWeight[a.toLowerCase()] ?? Infinity) -\n    (spriteWeight[b.toLowerCase()] ?? Infinity)\n}\n\nexport function Sprites ({ sprites }) {\n  return (\n    <Section\n      title=\"Sprites\"\n      contentClass=\"d-flex justify-content-center flex-wrap\"\n    >\n      {\n        sprites.sort(sortSprites).map(({\n          name: spriteName,\n          urls: [ normal, shiny ],\n        }, i) => (\n          <div key={`spritepair-${i}`} className=\"mx-2 my-1\">\n            {\n              spriteName\n                ? <header><h6>{spriteName}</h6></header>\n                : undefined\n            }\n            <div className=\"d-flex\">\n              <img src={normal} />\n              <img src={shiny} />\n            </div>\n          </div>\n        ))\n      }\n    </Section>\n  )\n}\n\nSprites.propTypes = {\n  sprites: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    urls: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })).isRequired,\n}\n","import { createContext } from 'react'\n\nexport const ConfigContext = createContext()\n\nexport function loadConfig () {\n  const configPath = process.env?.NODE_ENV === 'production'\n    ? 'config'\n    : 'config.local'\n\n  return fetch(`/config/${configPath}.json`)\n    .then((res) => res.json())\n}\n","import {\n  createContext,\n  useContext,\n  useMemo,\n} from 'react'\nimport { ConfigContext } from './config'\n\nexport const VersionContext = createContext()\n\nexport function usePolishedCrystalService (config, version) {\n  const configContext = useContext(ConfigContext)\n  const versionContext = useContext(VersionContext)\n\n  const baseUrl = config?.pcApiUrl ?? configContext?.pcApiUrl\n  const currentVersion = version?.current ?? versionContext?.current\n\n  return useMemo(\n    () => {\n      if (!baseUrl) {\n        return\n      }\n\n      return new PolishedCrystalService(\n        baseUrl,\n        currentVersion,\n      )\n    },\n    [ baseUrl, currentVersion ],\n  )\n}\n\nclass PolishedCrystalService {\n\n  constructor (baseUrl, version) {\n    this.baseUrl = baseUrl\n    this.version = version\n  }\n\n  fetchVersions () {\n    return fetch(`${this.baseUrl}/polished-crystal/versions`)\n      .then(async (res) => res.json())\n  }\n\n  async fetchStatList () {\n    if (!this.version) {\n      return\n    }\n\n    return fetch(`${this.baseUrl}/${this.version}/pokemon/stat`)\n      .then((res) => res.json())\n  }\n\n  async fetchStat (pokemon) {\n    if (!this.version) {\n      return\n    }\n\n    return fetch(`${this.baseUrl}/${this.version}/pokemon/stat/${pokemon}`)\n      .then((res) => res.json())\n  }\n\n  async fetchSpriteList () {\n    if (!this.version) {\n      return\n    }\n\n    return fetch(`${this.baseUrl}/${this.version}/pokemon/sprite`)\n      .then((res) => res.json())\n  }\n\n  async getSpriteRoute (pokemon, options = {}) {\n    if (!this.version) {\n      return\n    }\n\n    if (!this.validSprites) {\n      this.validSprites = this.fetchSpriteList()\n    }\n\n    return this.validSprites\n      .then((sprites) => sprites\n        .filter((sprite) =>\n          sprite === pokemon ||\n          sprite.startsWith(`${pokemon}_`),\n        ))\n      .then((relevantSprites) => relevantSprites.map((sprite) => `${\n        this.baseUrl\n      }/${\n        this.version\n      }/pokemon/sprite/${\n        sprite\n      }?shiny=${\n        options.shiny\n      }&scale=${\n        options.scale ?? 1\n      }`))\n  }\n\n}\n","import React, {\n  useEffect,\n  useState,\n} from 'react'\nimport { unstable_batchedUpdates as batchUpdate } from 'react-dom'\nimport {\n  useHistory,\n  useParams,\n} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\n\nimport { Link } from '../components/link/link'\nimport {\n  Section,\n  SectionContainer,\n} from '../components/sections/section'\nimport { Sprites } from '../components/sprites/sprites'\nimport {\n  usePolishedCrystalService,\n} from '../services/pc-api'\n\nexport function Pokemon () {\n  const params = useParams()\n  const name = params.name\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {name?.replace(/\\b(\\w)/g, (k) => k.toUpperCase()) ?? 'Pokémon'}\n        </title>\n      </Helmet>\n      <PokemonList name={name} />\n      {\n        name\n          ? (<PokemonStats name={name} />)\n          : (\n            <>\n              <div className=\"text-left pl-2\">\n                <h3>\n                  Pokémon\n                </h3>\n              </div>\n              <Section contentClass=\"p-5\">\n                <p className=\"lead\">\n                  Try selecting a Pokémon from the dropdown!\n                  <br />\n                  <Link to=\"/pokemon/steelix\">\n                    Steelix perhaps?\n                    <br />\n                    <br />\n                    <img src=\"/images/steelix.png\" />\n                  </Link>\n                </p>\n              </Section>\n            </>\n          )\n      }\n    </>\n  )\n}\n\nfunction pickStat (data, key, faithful = false) {\n  const unfaithful = data.unfaithful ?? {}\n  return (!faithful && unfaithful[key]) || data[key]\n}\n\nfunction formatStat (data, faithful = false) {\n  const unfaithful = data.unfaithful ?? {}\n  return {\n    types: pickStat(data, 'types', faithful),\n    abilities: pickStat(data, 'abilities', faithful),\n    evolutions: pickStat(data, 'evolutions', faithful),\n    heldItems: pickStat(data, 'heldItems', faithful),\n    gender: pickStat(data, 'gender', faithful),\n    baseExp: pickStat(data, 'baseExp', faithful),\n    catchRate: pickStat(data, 'catchRate', faithful),\n    eggGroups: pickStat(data, 'eggGroups', faithful),\n    hatchCycles: pickStat(data, 'hatchCycles', faithful),\n    growthRate: pickStat(data, 'growthRate', faithful),\n    baseStats: pickStat(data, 'baseStats', faithful),\n    evYield: pickStat(data, 'evYield', faithful),\n    movesByLevel: data.movesByLevel\n      .concat((!faithful && unfaithful.movesByLevel) || [])\n      .sort((a, b) => a.level - b.level),\n    movesByTMHM: data.movesByTMHM\n      .concat((!faithful && unfaithful.movesByTMHM) || []),\n  }\n}\n\nfunction StatBlock ({ stats, id }) {\n  const list = Object.entries(stats)\n  return list\n    .concat([ [ 'total', list.reduce((total, [ _, v ]) => total + v, 0) ] ])\n    .map(([ label, value ]) => (\n      <div key={`${id}-${label}`} className=\"p-1\">\n        <div>{label.toUpperCase()}</div>\n        <div>{value}</div>\n      </div>\n    ))\n}\n\nfunction PokemonStats ({ name }) {\n  const pcService = usePolishedCrystalService()\n  const [ isLoading, setIsLoading ] = useState(true)\n  const [ stat, setStat ] = useState()\n  const [ data, setData ] = useState()\n  const [ normalSprites, setNormalSprits ] = useState()\n  const [ shinySprites, setShinySprits ] = useState()\n  const [ faithful, setFaithful ] = useState(false)\n\n  useEffect(() => {\n    if (!pcService || !pcService.version) {\n      return\n    }\n\n    setStat(undefined)\n    setNormalSprits(undefined)\n    setShinySprits(undefined)\n    setData(undefined)\n    setIsLoading(true)\n\n    Promise.all([\n      pcService.fetchStat(name),\n      pcService.getSpriteRoute(name, { shiny: false, scale: 2 }),\n      pcService.getSpriteRoute(name, { shiny: true, scale: 2 }),\n    ]).then(([ data, normalSprites, shinySprites ]) => {\n      batchUpdate(() => {\n        setIsLoading(false)\n        setStat(data)\n        setNormalSprits(normalSprites)\n        setShinySprits(shinySprites)\n        setData(formatStat(data))\n      })\n    })\n  }, [ name, pcService ])\n\n  useEffect(() => {\n    if (stat) {\n      setData(formatStat(stat, faithful))\n    }\n  }, [ faithful ])\n\n  if (isLoading) {\n    return (<div>Loading...</div>)\n  }\n\n  const sprites = []\n  for (let i = 0; i < normalSprites.length; i++) {\n    const parts = normalSprites[i].split('_')\n\n    sprites.push({\n      name: normalSprites.length > 1 &&\n        parts.length > 1 &&\n        parts[parts.length - 1].split('?')[0]\n          .replace(/\\b(\\w)/g, (k) => k.toUpperCase()),\n      urls: [ normalSprites[i], shinySprites[i] ],\n    })\n  }\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between px-2\">\n        <h3>\n          {name.replace(/\\b(\\w)/g, (k) => k.toUpperCase())}\n        </h3>\n        <div>\n          <label htmlFor=\"faithful-check\">\n            Faithful Data\n          </label>&nbsp;\n          <input\n            id=\"faithful-check\"\n            type=\"checkbox\"\n            disabled={!stat.unfaithful}\n            checked={stat.unfaithful ? faithful : true}\n            onChange={(event) => setFaithful(event.target.checked)}\n          />\n        </div>\n      </div>\n      <Sprites sprites={sprites} />\n      <SectionContainer>\n        <Section title=\"Types\" withBox=\"left\">\n          {\n            data.types.map((type, i) => (\n              <div key={`type-${i}`}>\n                {type}\n              </div>\n            ))\n          }\n        </Section>\n        <Section title=\"Abilities\" withBox=\"left\">\n          <div>\n            1:&nbsp;{data.abilities.one}\n          </div>\n          <div>\n            2:&nbsp;{data.abilities.two}\n          </div>\n          <div>\n            H:&nbsp;{data.abilities.hidden}\n          </div>\n        </Section>\n        <Section title=\"Wild Held Items\" withBox=\"left\">\n          {\n            data.heldItems.map((item, i) => (\n              <div key={`items-${i}`}>\n                {item}\n              </div>\n            ))\n          }\n        </Section>\n      </SectionContainer>\n      {\n        data.evolutions.length > 0\n          ? (\n            <Section title=\"Evolutions\">\n              {\n                data.evolutions.map((evo, i) => (\n                  <div key={`evo-${i}`}>\n                    {`${evo.to}: ${evo.type} ${evo.requirement}`}\n                  </div>\n                ))\n              }\n            </Section>\n          ) : undefined\n      }\n      <SectionContainer>\n        <Section title=\"Egg Groups\" withBox=\"left\">\n          {\n            data.eggGroups.map((group, i) => (\n              <div key={`group-${i}`}>{group}</div>\n            ))\n          }\n        </Section>\n        <Section title=\"Growth Rate\">\n          {data.growthRate}\n        </Section>\n        <Section title=\"Hatch Cycles\">\n          {data.hatchCycles}\n        </Section>\n        <SectionContainer vertical={true}>\n          <Section title=\"Base Experience\">\n            {data.baseExp}\n          </Section>\n          <Section title=\"Catch Rate\">\n            {data.catchRate}\n          </Section>\n        </SectionContainer>\n        <Section\n          title=\"Gender\"\n          withBox={!data.gender.genderless ? 'right' : undefined}\n        >\n          {\n            data.gender.genderless ? (\n              <>\n                Genderless\n              </>\n            ) : (\n              <>\n                <div>\n                  Male: {data.gender.male}%\n                </div>\n                <div>\n                  Female: {data.gender.female}%\n                </div>\n              </>\n            )\n          }\n        </Section>\n      </SectionContainer>\n      <SectionContainer>\n        <Section\n          title=\"Base Stats\"\n          contentClass=\"d-flex justify-content-around\"\n        >\n          <StatBlock id=\"base\" stats={data.baseStats} />\n        </Section>\n        <Section\n          title=\"EV Yield\"\n          contentClass=\"d-flex justify-content-around\"\n        >\n          <StatBlock id=\"ev\" stats={data.evYield} />\n        </Section>\n      </SectionContainer>\n      <SectionContainer>\n        <Section title=\"Level Up Moves\">\n          {\n            data.movesByLevel.map(({ level, move }) => (\n              <div key={`level-${level}-move-${move}`}>\n                {move}\n              </div>\n            ))\n          }\n        </Section>\n        <Section title=\"TM/HM Moves\">\n          {\n            data.movesByTMHM.map((move) => (\n              <div key={`tmhm-move-${move}`}>\n                {move}\n              </div>\n            ))\n          }\n        </Section>\n      </SectionContainer>\n    </>\n  )\n}\n\nPokemonStats.propTypes = {\n  name: PropTypes.string.isRequired,\n}\n\nfunction PokemonList ({ name = '' }) {\n  const pcService = usePolishedCrystalService()\n\n  const [ list, setList ] = useState()\n  const history = useHistory()\n\n  useEffect(() => {\n    pcService?.fetchStatList()\n      .then((list) => setList(\n        list?.map((l) => l.replace(/\\b(\\w)/g, (k) => k.toUpperCase()))),\n      )\n  }, [ pcService ])\n\n  const optionKey = 'pokemon-option'\n  const options = list && list.map((p, i) => (\n    <option key={`${optionKey}-${i}`} value={p}>\n      {p}\n    </option>\n  ))\n\n  return (\n    <div className=\"d-flex justify-content-end px-2\">\n      <select\n        value={name.replace(/\\b(\\w)/g, (k) => k.toUpperCase())}\n        onChange={\n          (event) => history\n            .push(`/pokemon/${event.target.value.toLowerCase()}`)\n        }\n      >\n        <option value=\"\" disabled={true}>\n          Select Pokemon\n        </option>\n        {options}\n      </select>\n    </div>\n  )\n}\n\nPokemonList.propTypes = {\n  name: PropTypes.string,\n}\n","import React, {\n  useContext,\n} from 'react'\nimport {\n  VersionContext,\n} from '../services/pc-api'\n\nexport function VersionSelect () {\n  const version = useContext(VersionContext)\n  const key = 'version-select'\n\n  const options = version?.all && version.all.map((version, i) => (\n    <option key={`${key}-${i}`} value={version}>{version}</option>\n  ))\n\n  return (\n    <>\n      <span>Version:&nbsp;</span>\n      <select\n        value={version.current ?? ''}\n        onChange={(event) => {\n          version.set(event.target.value)\n        }}\n      >\n        {options}\n      </select>\n    </>\n  )\n}\n","import React, {\n  useEffect,\n  useState,\n} from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nimport { Home } from './pages/home'\nimport { Pokemon } from './pages/pokemon'\n\nimport {\n  AnchorToTab,\n  Link,\n  BasicLink,\n} from './components/link/link'\nimport { VersionSelect } from './components/api-version-select'\nimport {\n  ConfigContext,\n  loadConfig,\n} from './services/config'\nimport {\n  usePolishedCrystalService,\n  VersionContext,\n} from './services/pc-api'\n\nimport './app.scss'\nimport { unstable_batchedUpdates as batchUpdate } from 'react-dom'\nimport { Helmet } from 'react-helmet'\n\nexport function App () {\n  const [ config, setConfig ] = useState()\n  const [ versions, setVersions ] = useState()\n  const [ currentVersion, setCurrentVersion ] = useState()\n  const versionData = {\n    all: versions,\n    current: currentVersion,\n    set: (v) => setCurrentVersion(v),\n  }\n  const pcService = usePolishedCrystalService(config, versionData)\n\n  useEffect(() => {\n    if (!config) {\n      loadConfig().then((data) => setConfig(data))\n    }\n\n    if (config && !versions) {\n      pcService?.fetchVersions().then((data) => batchUpdate(() => {\n        setVersions(data)\n        setCurrentVersion(data[0])\n      }))\n    }\n  })\n\n  return (\n    <>\n      <Helmet\n        defaultTitle=\"Polished Crystal Data\"\n        titleTemplate=\"%s | Polished Crystal Data\"\n      ></Helmet>\n      <ConfigContext.Provider value={config}>\n        <VersionContext.Provider value={versionData}>\n          <Router>\n            <header className=\"m-2 position-relative\">\n              <div className=\"d-flex justify-content-center\">\n                <h1>\n                  <BasicLink to=\"/\">\n                    Polished Crystal Data\n                  </BasicLink>\n                </h1>\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                <Link to=\"/\">\n                  Home\n                </Link>\n                <Link to=\"/pokemon\">\n                  Pokémon\n                </Link>\n              </div>\n              <div className=\"version-selector\">\n                <VersionSelect />\n              </div>\n            </header>\n            <main className=\"main-area\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/pokemon/:name?\">\n                  <Pokemon />\n                </Route>\n              </Switch>\n            </main>\n            <footer className=\"d-flex justify-content-center m-2\">\n              <AnchorToTab href=\"https://github.com/alex-taxiera\">\n                Alex Taxiera\n              </AnchorToTab>\n              &nbsp;\n              <AnchorToTab href=\"https://github.com/alex-taxiera/polished-crystal-ui\">\n                {'<Code />'}\n              </AnchorToTab>\n            </footer>\n          </Router>\n        </VersionContext.Provider>\n      </ConfigContext.Provider>\n    </>\n  )\n}\n","export const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  App,\n} from './app'\nimport {\n  reportWebVitals,\n} from './reportWebVitals'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/reset.scss'\nimport './styles/links.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}